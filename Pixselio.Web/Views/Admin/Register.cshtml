
@{
    ViewData["Title"] = "Register";
    Layout = "~/Views/Shared/_Layout.cshtml";
}


@model Pixselio.Web.Models.Request.RegisterRequestModel
@using Microsoft.AspNetCore.Identity
@inject SignInManager<Pixselio.Entity.User> SignInManager
@inject Microsoft.AspNetCore.Identity.UserManager<Pixselio.Entity.User> userManager
    <div class="container">
        <div class="text-center">
            @if (SignInManager.IsSignedIn(User))
            {
                <div class="col-md-6 mt-5 text-center">
                    <div class="row">
                        <div class="col-md-6 col-sm-12">
                            <h2 class="font-weight-bold font-italic"> @User.Identity.Name</h2>
                        </div>
                    </div>
                    <div class="row align-bottom">
                        <div class="col-md-12 col-sm-12">
                            <form class="form-inline just-content-center" asp-controller="Admin" asp-action="Logout"
                                  asp-route-returnUrl="@Url.Page("/Admin/Register")"
                                  method="post">
                                <button type="submit" class="form-control">You are already Registered. Click to Logout.</button>
                            </form>
                        </div>

                    </div>
                </div>
            }
            else
            {
                <div class="row">
                    <h3 class="font-weight-bold ">
                        Register
                    </h3>

                </div>
                <div class="row">
                    @using (Html.BeginForm("Register", "Admin", FormMethod.Post))
                    {
                        <div class="row mt-5">
                            <div class="col-xl-8 col-lg-12 col-md-12 col-sm-12 mb-1">
                                @Html.TextBoxFor(x => x.UserName, new { @class = "form-control", @maxlength = "50", @placeholder = "User Name",@required="required" })

                            </div>
                            <div class="col-xl-8 col-lg-12 col-md-12 col-sm-12 mb-1">
                                @Html.TextBoxFor(x => x.Email, new { @class = "form-control", @maxlength = "50", @placeholder = "E-Mail",@required="required"  })

                            </div>
                            <div class="col-xl-8 col-lg-12 col-md-12 col-sm-12 mb-1">
                                @Html.PasswordFor(x => x.Password, new { @class = "form-control    ", @maxlength = "50", @placeholder = "Password" ,@required="required" })
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-xl-4 col-lg-6 col-md-6 col-sm-12  mt-2">
                                <button type="submit" class="form-control">Save</button>
                            </div>
                            <div class="col-lg-4 col-md-0"></div>
                        </div>


                        <div class="row mt-5">
                            <div class="col-md-9 col-sm-12  mb-2">

                                @if (Model.UserName != null)
                                {
                                    @if (Model.IsCreateSuccess)
                                    {
                                        <text>   <b>  @Model.UserName</b>  successfully created.<a class="font-weight-bold" href="/Home/Index">Home</a></text>
                                    }
                                    else
                                    {
                                        <text>    <b>  @Model.UserName</b> could not be registered.Try the steps below
                                        <ul>
                                            @foreach (var item in Model.ModelBinding.Select(x => x.Value.Errors)
.Where(y => y.Count > 0)
.ToList())
                                            {
                                                <li>
                                                    @item[0].ErrorMessage
                                                </li>
                                            }
                                        </ul>
                                        </text>
                                    }
                                }
                            </div>
                        </div>
                    }
                </div>
            }

        </div>

    </div>
 


